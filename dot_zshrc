export ZSH_CONFIG_DIR="$HOME/.zsh"

source "$ZSH_CONFIG_DIR/zinit.zsh"

export HOMEBREW_NO_ANALYTICS=1

if [[ $OSTYPE == linux* ]]; then
  eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
fi

# Created by `pipx` on 2025-01-21 19:37:58
export PATH="$PATH:/Users/leojweda/.local/bin"

export PATH="$(brew --prefix)/opt/python@3/libexec/bin:$PATH"

export XDG_CONFIG_HOME="$HOME/.config"
export XDG_DATA_HOME="$HOME/.local/share"
export XDG_STATE_HOME="$HOME/.local/state"
export XDG_CACHE_HOME="$HOME/.cache"

# Preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
  export EDITOR='vim'
else
  export EDITOR='code'
fi

export VISUAL='code'

export BAT_CONFIG_DIR="${XDG_CONFIG_HOME}/bat"

typeset -A ZSH_HIGHLIGHT_STYLES

source "$ZSH_CONFIG_DIR/appearance.zsh"

HISTFILE=~/.zsh_history
HISTSIZE=10000
SAVEHIST=$HISTSIZE

setopt EXTENDED_HISTORY
setopt SHARE_HISTORY
setopt HIST_IGNORE_DUPS
setopt HIST_IGNORE_ALL_DUPS
setopt HIST_FIND_NO_DUPS
setopt HIST_IGNORE_SPACE
setopt HIST_SAVE_NO_DUPS
setopt HIST_VERIFY
setopt HIST_BEEP

setopt INTERACTIVE_COMMENTS

source "$ZSH_CONFIG_DIR/aliases.zsh"

source "$ZSH_CONFIG_DIR/fzf.zsh"

eval "$(gh copilot alias -- zsh)"

eval "$(zoxide init --cmd cd zsh)"

eval "$(mise activate zsh)"

# eval "$(register-python-argcomplete pipx)"

zinit light zsh-users/zsh-completions
zinit light Aloxaf/fzf-tab
autoload -U compinit && compinit
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Za-z}'
# TODO: Make the colours match the colours in eza.
zstyle ':completion:*' list-colors "${(s.:.)LS_COLORS}"
zstyle ':completion:*' menu no
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'ls --color $realpath'

# Must be loaded before history-substring-search, autosuggestions, and the prompt.
zinit light zsh-users/zsh-syntax-highlighting

# Must be loaded after syntax-highlighting, but before augosuggestions and the prompt.
zinit light 'zsh-users/zsh-history-substring-search'
# zinit ice wait atload"_history_substring_search_config"
bindkey '^[[A' history-substring-search-up
bindkey '^[[B' history-substring-search-down
bindkey -M emacs '^P' history-substring-search-up
bindkey -M emacs '^N' history-substring-search-down
bindkey -M vicmd 'k' history-substring-search-up
bindkey -M vicmd 'j' history-substring-search-down

# Must be loaded after syntax-highlighting and history-substring-search, but before the prompt.
zinit light zsh-users/zsh-autosuggestions

# Must be loaded after history-substring-search, autosuggestions, and augosuggestions.
source "$ZSH_CONFIG_DIR/prompt.zsh"

zinit light 'MichaelAquilina/zsh-you-should-use'

zinit light 'MichaelAquilina/zsh-auto-notify'
AUTO_NOTIFY_EXPIRE_TIME=7000
AUTO_NOTIFY_THRESHOLD=10
AUTO_NOTIFY_IGNORE+=(
  'docker', 'htop', 'less', 'man', 'more', 'nano', 'nvim', 'ssh', 'tmux', 'top', 'vim', 'watch'
)

zinit snippet https://raw.githubusercontent.com/junegunn/fzf-git.sh/main/fzf-git.sh
zinit snippet OMZP::colored-man-pages
zinit snippet OMZP::encode64
zinit snippet OMZP::man
zinit snippet OMZP::thefuck
zinit snippet OMZP::tldr
# zinit snippet OMZP::vi-mode

eval $(thefuck --alias)

source "$ZSH_CONFIG_DIR/functions.zsh"

ZSH_HIGHLIGHT_STYLES[reserved-word]='fg=green'
ZSH_HIGHLIGHT_STYLES[builtin]='fg=166'
ZSH_HIGHLIGHT_STYLES[function]='fg=yellow'
ZSH_HIGHLIGHT_STYLES[command]='fg=yellow'
ZSH_HIGHLIGHT_STYLES[path]='fg=blue,underline'
ZSH_HIGHLIGHT_STYLES[single-hyphen-option]='fg=61'
ZSH_HIGHLIGHT_STYLES[double-hyphen-option]='fg=61'
ZSH_HIGHLIGHT_STYLES[back-quoted-argument]='fg=cyan'
ZSH_HIGHLIGHT_STYLES[back-quoted-argument-delimiter]='fg=cyan'
ZSH_HIGHLIGHT_STYLES[back-quoted-argument-unclosed]='fg=red,underline'
ZSH_HIGHLIGHT_STYLES[single-quoted-argument]='fg=cyan'
ZSH_HIGHLIGHT_STYLES[single-quoted-argument-unclosed]='fg=red,underline'
ZSH_HIGHLIGHT_STYLES[double-quoted-argument]='fg=cyan'
ZSH_HIGHLIGHT_STYLES[double-quoted-argument-unclosed]='fg=red,underline'

# Homebrew Command Not Found
HB_CNF_HANDLER="$(brew --repository)/Library/Taps/homebrew/homebrew-command-not-found/handler.sh"
if [ -f "$HB_CNF_HANDLER" ]; then
  source "$HB_CNF_HANDLER";
fi
